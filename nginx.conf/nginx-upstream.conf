

#user  nobody;
worker_processes  1;
#error_log  logs/error.log debug;
error_log  logs/error.log debug;
#error_log  logs/error.log  info;
pid        logs/nginx.pid;
worker_rlimit_nofile 51200;
events {
    worker_connections  51200;
}

stream {
    upstream rtmp {
#    hash $remote_addr consistent;
    server [XXXXXX::a]:1935;
    server [XXXXXX::b]:1935;
    }
    server {
        listen 1936;
        proxy_timeout 10s;
        proxy_pass rtmp;
    }
}



#rtmp_auto_push on;
rtmp {
server {
    listen 1935;
        chunk_size 4096;
        access_log logs/access.rtmp.log;
        application livetv {
    live on;
    pull rtmp://localhost:1936/livetv/;
    wait_video on;
                }

        application hls {
            live on;
            wait_video on;
            wait_key on;
            hls on;
            hls_path /dev/shm/hls;
            hls_fragment 5s;

                pull rtmp://localhost:1936/livetv/ name=btv1hd static;
                pull rtmp://localhost:1936/livetv/ name=zjhd static;
                pull rtmp://localhost:1936/livetv/ name=jshd static;
                pull rtmp://localhost:1936/livetv/ name=dfhd static;
                pull rtmp://localhost:1936/livetv/ name=cetv1hd static;
                pull rtmp://localhost:1936/livetv/ name=documentaryhd static;
                        }

        }
}

# HTTP can be used for accessing RTMP stats
http {
    include mime.types;

    server {

        listen      80;
        listen      [::]:80;
        # This URL provides RTMP statistics in XML
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root /usr/local/nginx/html/www;
        }

        location /hls {
        # Serve HLS fragments
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            alias /dev/shm/hls;
            expires -1;
        }
        location / {
            root /usr/local/nginx/html/www;
        }

    }
}
